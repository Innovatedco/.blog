@* @inject NavigationManager navigationManager *@
@inherits EditMenuBase
<AuthorizeView>
    <NotAuthorized>
        <div class="edit-menu me-3 mt-3 text-end">
            <button name="login" @onclick=Login type="button" class="btn btn-outline-success btn-sm my-1">login</button><br />
         </div>
    </NotAuthorized>
    <Authorized>
        <div class="edit-menu me-3 mt-3 text-end">
            <button name="create-post" @onclick=CreatePost type="button" class="btn btn-warning btn-sm my-1">Create Post</button><br />
            <button name="create-category" @onclick=CreateCategory type="button" class="btn btn-warning btn-sm my-1">Create Category</button><br />
            <button name="create-author" @onclick=CreateAuthor type="button" class="btn btn-warning btn-sm my-1">Create Author</button><br />
            @if (IsPostPage && Post != null)
            {
                <button name="edit-post" @onclick=EditPost type="button" class="btn btn-danger btn-sm my-1">Edit Post</button><br />
            }
            @if (IsCategoryPage && Category != null)
            {
                <button name="edit-category" @onclick=EditCategory type="button" class="btn btn-danger btn-sm my-1">Edit Category</button><br />
            }
            <button name="manage-posts" @onclick=ManagePosts type="button" class="btn btn-primary btn-sm my-1">Manage Posts</button><br />
            <button name="manage-categories" @onclick=ManageCategories type="button" class="btn btn-primary btn-sm my-1">Manage Categories</button><br />
            <button name="manage-authors" @onclick=ManageAuthors type="button" class="btn btn-primary btn-sm my-1">Manage Authors</button><br />
            <button name="sign-out" @onclick=SignOut type="button" class="btn btn-success btn-sm my-1">Sign out</button><br />
        </div>
    </Authorized>
</AuthorizeView>

@* @code {
    #region Member Variables
    [Parameter]
    public BlogPost Post { get; set; } = default!;
    [Parameter]
    public BlogCategory Category { get; set; } = default!;
    public bool IsPostPage { get; private set; } = false;
    public bool IsCategoryPage { get; private set; } = false;
    #endregion

    /// <summary>
    /// Sets the page function based on the url
    /// </summary>
    protected override void OnParametersSet()
    {
        var parts = navigationManager.Uri.Split('/');
        if (parts.Contains("post") || parts.Contains("preview"))
        {
            IsPostPage = true;
        }
        else if(parts.Contains("category"))
        {
            IsCategoryPage = true;
        }
    }

    /// <summary>
    /// Handles the edit post button click
    /// </summary>
    protected void EditPost()
    {
        if(Post != null)
        {
            navigationManager.NavigateTo(NavUrlHelpers.EditPostStub + Post.NormalizedTitle, true);
        }
    }

    /// <summary>
    /// Handles the edit category button click
    /// </summary>
    protected void EditCategory()
    {
        if (Category != null)
        {
            navigationManager.NavigateTo(NavUrlHelpers.EditCategoryUrlStub + Category.CategoryNameNormalized, true);
        }
    }

    /// <summary>
    /// Handles the create post button click
    /// </summary>
    protected void CreatePost()
    {
        navigationManager.NavigateTo(NavUrlHelpers.CreatePostUrlStub, true);
    }

    /// <summary>
    /// Handles the create category button click
    /// </summary>
    protected void CreateCategory()
    {
        navigationManager.NavigateTo(NavUrlHelpers.CreateCategoryUrlStub, true);
    }

    /// <summary>
    /// Handles the create author button click
    /// </summary>
    protected void CreateAuthor()
    {
        navigationManager.NavigateTo(NavUrlHelpers.CreateAuthorUrlStub, true);
    }

    /// <summary>
    /// Handles the manage posts button click
    /// </summary>
    protected void ManagePosts()
    {
        navigationManager.NavigateTo(NavUrlHelpers.ManagePostsUrlStub, true);
    }

    /// <summary>
    /// Handles the manage categories button click
    /// </summary>
    protected void ManageCategories()
    {
        navigationManager.NavigateTo(NavUrlHelpers.ManageCategoriesUrlStub, true);
    }

    /// <summary>
    /// Handles the manage authors button click
    /// </summary>
    protected void ManageAuthors()
    {
        navigationManager.NavigateTo(NavUrlHelpers.ManageAuthorsUrlStub, true);
    }

    /// <summary>
    /// Handles the sign out button click
    /// </summary>
    protected void SignOut()
    {
        navigationManager.NavigateTo(NavUrlHelpers.LogoutUrlStub, true);
    }

    /// <summary>
    /// Handles the login button click
    /// </summary>
    protected void Login()
    {
        navigationManager.NavigateTo(NavUrlHelpers.LoginUrlStub, true);
    }
} *@
