@page "/"
@page "/index"
@inherits DataPage
<PageTitle>@SiteName</PageTitle>
<HeadContent>
    <HeadTags/>
</HeadContent>
<Menus />
<div class="row">
    <div class="col-lg-8 col-sm-12"><FeaturedPost Post="@Featured" /></div>
    <div class="col-lg-4 col-sm-12">
        @if(Posts != null)
        {
            <h3 class="me-3 mt-2 recentPostsTitle">Recent posts</h3>
        }        
        <PagerComponentGeneric Css="me-3" @ref="pagerComponentGeneric" T="BlogPost" PageSize="3" OnPagingChanged="OnPagingChanged" List="@All" />
        <PostList Posts="Posts" TemplateClass="blog-posts-thin" />
    </div>
    <div class="clearfix"></div>
</div>

@code {
    #region Member Variables
    IEnumerable<BlogPost>? Posts { get; set; } = default!;
    IEnumerable<BlogPost>? All { get; set; } = default!;
    BlogPost Featured { get; set; } = default!;
    private PagerComponentGeneric<BlogPost> pagerComponentGeneric { get; set; } = default!;
    #endregion

    /// <summary>
    /// Initializes the page vaiables for featured and recent
    /// </summary>
    /// <param name="firstRender"></param>
    /// <returns></returns>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var result = await BlogPostService.GetBlogPostsForHomePage();
            All = result.Item1;
            Featured = result.Item2;
            pagerComponentGeneric.Initialize(All);
            Posts = pagerComponentGeneric.Pager!.CurrentItemList;
            StateHasChanged();
        }
    }

    /// <summary>
    /// Handles the page changed event of the 
    /// </summary>
    /// <param name="pager"></param>
    public void OnPagingChanged(PagerModelGeneric<BlogPost> pager)
    {
        Posts = pager.CurrentItemList;
    }
}